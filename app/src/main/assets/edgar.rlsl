@import grayscale.rlsl

const float width = 320;
const float height = 360;

const float step_w = 1/width;
const float step_h = 1/height;

const vec2 offset[12] = 
   vec2[12]( vec2(-step_w * 3, 0), vec2(-step_w * 2, 0), vec2(-step_w * 1, 0), 
              vec2(step_w * 3, 0), vec2(step_w * 2, 0), vec2(step_w * 1, 0), 
              vec2(0, step_h * 3), vec2(0, step_h * 2), vec2(0, step_h * 1),
              vec2(0, step_h * -3), vec2(0, step_h * -2), vec2(0, step_h * -1));
            

vec4 edgar(vec4 color, vec2 texcoord, sampler2D thesampler)
{
   int i = 0;
   vec3 sum = vec3(0.0);
   
   for( i=0; i<12; i++ ){
      vec3 tmp = texture2D(thesampler, texcoord.st + offset[i]).xyz;
      sum += tmp * (-1 / 12.0) * 2;
   }
   
   vec4 center = texture2D(thesampler, texcoord.st);
   
   sum += center.xyz * 2;
   
   //sum.x = 1 - sum.x;
   //sum.y = 1 - sum.y;
   //sum.z = 1 - sum.z;
   

   return color * vec4(grayscale_conversion(sum), center.w);
}
